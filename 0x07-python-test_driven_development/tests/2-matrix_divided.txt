==============================
How to use 2-matrix_divided.py
==============================

This module defines a function that divides the element in a matrix 
``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided()`` returns the new matrix of its element divided by the 
argument div

::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ... [2, 4, 6]
    ... [4, 8, 2]   
    ... ]
    >>> print(matrix_divided(matrix, 2))
    [[1.0, 2.0, 3.0], [2.0, 4.0, 1.0]]

original matrix is not changed

::
    >>> print(matrix)
    [[2, 4, 6], [4, 8, 2]]

Quotients are rounded off to a maximum 2 decimal places

::
    >>> matrix = [
    ... [4, 5, 7]
    ... [3, 4, 6]    
    ... ]
    >>> print(matrix_divided(matrix), 3)
    [[1.33, 1.67, 2.33], [1, 1.33, 2]]

Floating-point numbers can be used

::
    >>> matrix = [
    ... [2.0, 4.2, 6.8]
    ... [3, 2, 9.0]    
    ... ]
    >>> print(matrix_divided(matrix), 2)
    [[1.0, 2.1, 3.4], [1.5, 1.0, 4.5]]

Invalid matrices
================

Matrix must be a lists of list containing integers or floats 
else a TypeError is printed

::
    >>> matrix = "hello"
    >>> print(matrix_divided(matrix, 4))
    Traceback (most recent call last)
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = None
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last)
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = [1, 2, 3]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last)
    TypeError: matrix must be a matrix (list of lists) of integers/floats

An empty list will also raise the TypeError

::
    >>> matrix = []
    >>> print(matrix_divided(matrix, 6))
    Traceback (most recent call last)
    TypeError: matrix must be a matrix (list of lists) of integers/floats

An empty lists of list on the other hand will work

::
    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 4))
    [[]]

All the rows in the matrix must be the same size else a TypeError is
also raised

::
    >>> matrix = [
    ... [1, 2]
    ... [1, 3, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last)
    TypeError: Each row of the matrix must have the same size

Invalid divisors
================

The div argument must be a number else a TypeError is raised

::
    >>> matrix = [
    ... [4, 5, 7]
    ... [3, 4, 6]    
    ... ]
    >>> print (matrix_divided(matrix, "hello"))
    Traceback (most recent call last)
    TypeError: div must be a number

The div argument must not equal to zero else ZeroDivisionError is 
raised

::
    >>> matrix = [
    ... [4, 5, 7]
    ... [3, 4, 6]    
    ... ]
    >>> print (matrix_divided(matrix, 0))
    Traceback (most recent call last)
    ZeroDivisionError: division by zero










